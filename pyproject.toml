[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "investing-agents"
version = "0.1.0"
description = "Multi-agent system for generating institutional-grade equity research reports"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "chaorong"}
]
keywords = ["investing", "equity-research", "multi-agent", "claude", "ai"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "anthropic>=0.34.0",
    "claude-agent-sdk>=0.1.0",
    "numpy>=1.24.0",
    "pydantic>=2.0.0",
    "structlog>=23.0.0",
    "python-dotenv>=1.0.0",
    "httpx>=0.24.0",
    "aiofiles>=23.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "black>=23.0.0",
]

[project.urls]
Homepage = "https://github.com/chaorong/investing-agent-sdk"
Documentation = "https://github.com/chaorong/investing-agent-sdk/tree/main/docs"
Repository = "https://github.com/chaorong/investing-agent-sdk"
Issues = "https://github.com/chaorong/investing-agent-sdk/issues"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["investing_agents*"]
namespaces = false

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers -m 'not slow'"
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (real LLM calls, deselect with '-m \"not slow\"')",
]

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py
"tests/**/*.py" = ["F401", "F811"]  # Allow test fixtures

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_calls = false  # Too strict for now
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "anthropic.*",
    "claude_agent_sdk.*",
    "structlog.*",
]
ignore_missing_imports = true

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | \.eggs
  | \.mypy_cache
  | \.pytest_cache
  | build
  | dist
)/
'''

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
